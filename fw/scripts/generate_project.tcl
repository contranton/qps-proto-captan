#*****************************************************************************************
# Vivado (TM) v2024.1 (64-bit)
#
# generate_project.tcl: Tcl script for re-creating project 'qps-proto-captan-git'
#
# Generated by Vivado on Mon Jul 28 15:28:35 CDT 2025
# IP Build 5075265 on Wed May 22 21:45:21 MDT 2024
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (generate_project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ti/ADS98xx_deserializer.v"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/crc_chk.v"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/crc_gen.v"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ti/posedge_detect.v"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/hdl/params_package.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/address_container.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/arp_reply.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/data_manager/burst_controller_sm.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/hdl/burst_traffic_controller.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/crc_splice.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/create_packet.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/fifo.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/data_manager/rx_ctl.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/data_manager/ram_comm_dec.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/data_manager/tx_seq_ctl.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/data_manager/data_manager.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/dataout_mux.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/decipherer.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/ethernet_controller.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/xmii_handler.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/ethernet_controller_wrapper.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/hdl/reset_mgr.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/hdl/ethernet_interface.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/filter_data_out.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/icmp_ping_checksum_calc.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/icmp_ping_shift_reg.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/ip_checksum_calc.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/qps_pkg.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-adc-autoalign/phase_shift_if.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/pulse_shorten.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/sequencer.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/or33.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/udp_data_splicer.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/user_addrs_mux.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/main.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-adc-autoalign/adc_autoalign.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/tb/sim_pkg.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/tb/ads9813_pkg.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/tb/ads9813_mockup.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/tb/main_tb.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ip/ila_2/ila_2.xci"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ip/axi_gpio_0/axi_gpio_0.xci"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ti/ADS98xx_spi_configuration_interface.sv"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/hdl/TOP_LEVEL.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/modules/mod-ethernet-interface/ethernet_interface_tb.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/vhdl/tb/sequencer_tb.vhd"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ip/ila_0/ila_0.xci"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ip/vio_0/vio_0.xci"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ip/fifo_1/fifo_1.xci"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ip/ila_deser/ila_deser.xci"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ip/ila_1/ila_1.xci"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ip/clk_wiz_phase_shift/clk_wiz_phase_shift.xci"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ip/clk_wiz_phy2adc/clk_wiz_phy2adc.xci"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ip/clk_wiz_usrclk2adc/clk_wiz_usrclk2adc.xci"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/ip/fifo_0/fifo_0.xci"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/xdc/constraints.xdc"
#    "/data/javierc/012_QMS_DAQ/03-QPS-Proto-git/fw/srcs/xdc/debug.xdc"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/../srcs/ti/ADS98xx_deserializer.v"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/crc_chk.v"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/crc_gen.v"]"\
 "[file normalize "$origin_dir/../srcs/ti/posedge_detect.v"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/hdl/params_package.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/address_container.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/arp_reply.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/burst_controller_sm.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/hdl/burst_traffic_controller.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/crc_splice.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/create_packet.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/fifo.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/rx_ctl.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/ram_comm_dec.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/tx_seq_ctl.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/data_manager.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/dataout_mux.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/decipherer.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/ethernet_controller.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/xmii_handler.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/ethernet_controller_wrapper.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/hdl/reset_mgr.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/hdl/ethernet_interface.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/filter_data_out.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/icmp_ping_checksum_calc.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/icmp_ping_shift_reg.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/ip_checksum_calc.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/qps_pkg.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-adc-autoalign/phase_shift_if.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/pulse_shorten.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/sequencer.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/or33.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/udp_data_splicer.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/user_addrs_mux.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/main.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-adc-autoalign/adc_autoalign.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/tb/sim_pkg.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/tb/ads9813_pkg.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/tb/ads9813_mockup.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/tb/main_tb.vhd"]"\
 "[file normalize "$origin_dir/../srcs/ip/ila_2/ila_2.xci"]"\
 "[file normalize "$origin_dir/../srcs/ip/axi_gpio_0/axi_gpio_0.xci"]"\
 "[file normalize "$origin_dir/../srcs/ti/ADS98xx_spi_configuration_interface.sv"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/hdl/TOP_LEVEL.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_interface_tb.vhd"]"\
 "[file normalize "$origin_dir/../srcs/vhdl/tb/sequencer_tb.vhd"]"\
 "[file normalize "$origin_dir/../srcs/ip/ila_0/ila_0.xci"]"\
 "[file normalize "$origin_dir/../srcs/ip/vio_0/vio_0.xci"]"\
 "[file normalize "$origin_dir/../srcs/ip/fifo_1/fifo_1.xci"]"\
 "[file normalize "$origin_dir/../srcs/ip/ila_deser/ila_deser.xci"]"\
 "[file normalize "$origin_dir/../srcs/ip/ila_1/ila_1.xci"]"\
 "[file normalize "$origin_dir/../srcs/ip/clk_wiz_phase_shift/clk_wiz_phase_shift.xci"]"\
 "[file normalize "$origin_dir/../srcs/ip/clk_wiz_phy2adc/clk_wiz_phy2adc.xci"]"\
 "[file normalize "$origin_dir/../srcs/ip/clk_wiz_usrclk2adc/clk_wiz_usrclk2adc.xci"]"\
 "[file normalize "$origin_dir/../srcs/ip/fifo_0/fifo_0.xci"]"\
 "[file normalize "$origin_dir/../srcs/xdc/constraints.xdc"]"\
 "[file normalize "$origin_dir/../srcs/xdc/debug.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "project-qps-proto-captan"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "generate_project.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../qps-proto-captan-git"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a200tffg1156-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a200tffg1156-2" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "target_language" -value "VHDL" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "1" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "1" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "1" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "1" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xcelium_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "1" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../srcs/ti/ADS98xx_deserializer.v"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/crc_chk.v"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/crc_gen.v"] \
 [file normalize "${origin_dir}/../srcs/ti/posedge_detect.v"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/hdl/params_package.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/address_container.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/arp_reply.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/burst_controller_sm.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/hdl/burst_traffic_controller.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/crc_splice.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/create_packet.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/fifo.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/rx_ctl.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/ram_comm_dec.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/tx_seq_ctl.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/data_manager.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/dataout_mux.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/decipherer.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/ethernet_controller.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/xmii_handler.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/ethernet_controller_wrapper.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/hdl/reset_mgr.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/hdl/ethernet_interface.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/filter_data_out.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/icmp_ping_checksum_calc.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/icmp_ping_shift_reg.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/ip_checksum_calc.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/qps_pkg.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-adc-autoalign/phase_shift_if.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/pulse_shorten.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/sequencer.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/or33.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/udp_data_splicer.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/user_addrs_mux.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/main.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-adc-autoalign/adc_autoalign.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/tb/sim_pkg.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/tb/ads9813_pkg.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/tb/ads9813_mockup.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/tb/main_tb.vhd"] \
 [file normalize "${origin_dir}/../srcs/ip/ila_2/ila_2.xci"] \
 [file normalize "${origin_dir}/../srcs/ip/axi_gpio_0/axi_gpio_0.xci"] \
 [file normalize "${origin_dir}/../srcs/ti/ADS98xx_spi_configuration_interface.sv"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/hdl/TOP_LEVEL.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_interface_tb.vhd"] \
 [file normalize "${origin_dir}/../srcs/vhdl/tb/sequencer_tb.vhd"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/hdl/params_package.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/address_container.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/arp_reply.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/burst_controller_sm.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/hdl/burst_traffic_controller.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/crc_splice.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/create_packet.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/fifo.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/rx_ctl.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/ram_comm_dec.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/tx_seq_ctl.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/data_manager/data_manager.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/dataout_mux.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/decipherer.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/ethernet_controller.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/xmii_handler.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/ethernet_controller_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/hdl/reset_mgr.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/hdl/ethernet_interface.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/filter_data_out.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/icmp_ping_checksum_calc.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/icmp_ping_shift_reg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/ip_checksum_calc.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/qps_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-adc-autoalign/phase_shift_if.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/pulse_shorten.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/sequencer.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/or33.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/udp_data_splicer.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_controller/user_addrs_mux.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/main.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-adc-autoalign/adc_autoalign.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/tb/sim_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/tb/ads9813_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/tb/ads9813_mockup.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "used_in" -value "simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/tb/main_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "used_in" -value "simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "$origin_dir/../srcs/ip/ila_2/ila_2.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/../srcs/ip/axi_gpio_0/axi_gpio_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "$origin_dir/../srcs/ti/ADS98xx_spi_configuration_interface.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/hdl/TOP_LEVEL.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "used_in" -value "simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/modules/mod-ethernet-interface/ethernet_interface_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "used_in" -value "simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "$origin_dir/../srcs/vhdl/tb/sequencer_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "used_in" -value "simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
set_property -name "top" -value "main" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../srcs/ip/ila_0/ila_0.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../srcs/ip/ila_0/ila_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../srcs/ip/vio_0/vio_0.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../srcs/ip/vio_0/vio_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../srcs/ip/fifo_1/fifo_1.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../srcs/ip/fifo_1/fifo_1.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../srcs/ip/ila_deser/ila_deser.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../srcs/ip/ila_deser/ila_deser.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../srcs/ip/ila_1/ila_1.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../srcs/ip/ila_1/ila_1.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../srcs/ip/clk_wiz_phase_shift/clk_wiz_phase_shift.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../srcs/ip/clk_wiz_phase_shift/clk_wiz_phase_shift.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../srcs/ip/clk_wiz_phy2adc/clk_wiz_phy2adc.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../srcs/ip/clk_wiz_phy2adc/clk_wiz_phy2adc.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../srcs/ip/clk_wiz_usrclk2adc/clk_wiz_usrclk2adc.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../srcs/ip/clk_wiz_usrclk2adc/clk_wiz_usrclk2adc.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../srcs/ip/fifo_0/fifo_0.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../srcs/ip/fifo_0/fifo_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../srcs/xdc/constraints.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../srcs/xdc/constraints.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../srcs/xdc/debug.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../srcs/xdc/debug.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xc7a200tffg1156-2" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "main_tb" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axi_quad_spi:3.2\
  xilinx.com:ip:microblaze:11.0\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:system_ila:1.1\
  xilinx.com:ip:mdm:3.2\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:lmb_bram_if_cntlr:4.0\
  xilinx.com:ip:blk_mem_gen:8.4\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: local_mem
proc create_hier_cell_local_mem { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_local_mem() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:lmb_rtl:1.0 DLMB

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:lmb_rtl:1.0 ILMB

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:lmb_rtl:1.0 DLMB_Dbg


  # Create pins
  create_bd_pin -dir I -type clk LMB_Clk
  create_bd_pin -dir I -type rst LMB_Rst

  # Create instance: lmb_bram_if_cntlr_1, and set properties
  set lmb_bram_if_cntlr_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 lmb_bram_if_cntlr_1 ]

  # Create instance: lmb_bram_if_cntlr_0, and set properties
  set lmb_bram_if_cntlr_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 lmb_bram_if_cntlr_0 ]
  set_property CONFIG.C_NUM_LMB {2} $lmb_bram_if_cntlr_0


  # Create instance: blk_mem_gen_0, and set properties
  set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
  set_property CONFIG.Memory_Type {True_Dual_Port_RAM} $blk_mem_gen_0


  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins lmb_bram_if_cntlr_0/SLMB1] [get_bd_intf_pins DLMB_Dbg]
  connect_bd_intf_net -intf_net lmb_bram_if_cntlr_0_BRAM_PORT [get_bd_intf_pins lmb_bram_if_cntlr_0/BRAM_PORT] [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTA]
  connect_bd_intf_net -intf_net lmb_bram_if_cntlr_1_BRAM_PORT [get_bd_intf_pins lmb_bram_if_cntlr_1/BRAM_PORT] [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTB]
  connect_bd_intf_net -intf_net microblaze_0_DLMB [get_bd_intf_pins DLMB] [get_bd_intf_pins lmb_bram_if_cntlr_1/SLMB]
  connect_bd_intf_net -intf_net microblaze_0_ILMB [get_bd_intf_pins ILMB] [get_bd_intf_pins lmb_bram_if_cntlr_0/SLMB]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins LMB_Clk] [get_bd_pins lmb_bram_if_cntlr_0/LMB_Clk] [get_bd_pins lmb_bram_if_cntlr_1/LMB_Clk]
  connect_bd_net -net Net1 [get_bd_pins LMB_Rst] [get_bd_pins lmb_bram_if_cntlr_0/LMB_Rst] [get_bd_pins lmb_bram_if_cntlr_1/LMB_Rst]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set SPI_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:spi_rtl:1.0 SPI_0 ]

  set gpio_rtl_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 gpio_rtl_0 ]


  # Create ports
  set bd_clk [ create_bd_port -dir I -type clk -freq_hz 125000000 bd_clk ]
  set bd_reset [ create_bd_port -dir I -type rst bd_reset ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $bd_reset

  # Create instance: axi_quad_spi_0, and set properties
  set axi_quad_spi_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_0 ]
  set_property -dict [list \
    CONFIG.C_FIFO_DEPTH {256} \
    CONFIG.C_SCK_RATIO {8} \
    CONFIG.C_SPI_MODE {0} \
    CONFIG.C_USE_STARTUP {0} \
    CONFIG.C_XIP_MODE {0} \
    CONFIG.FIFO_INCLUDED {1} \
    CONFIG.Master_mode {1} \
  ] $axi_quad_spi_0


  # Create instance: microblaze_0, and set properties
  set microblaze_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:microblaze:11.0 microblaze_0 ]
  set_property -dict [list \
    CONFIG.C_DEBUG_ENABLED {2} \
    CONFIG.C_D_AXI {1} \
    CONFIG.C_ENABLE_CONVERSION {0} \
    CONFIG.C_NUMBER_OF_PC_BRK {4} \
  ] $microblaze_0


  # Create instance: local_mem
  create_hier_cell_local_mem [current_bd_instance .] local_mem

  # Create instance: microblaze_0_axi_periph, and set properties
  set microblaze_0_axi_periph [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 microblaze_0_axi_periph ]
  set_property -dict [list \
    CONFIG.NUM_MI {3} \
    CONFIG.NUM_SI {2} \
  ] $microblaze_0_axi_periph


  # Create instance: rst_clk_wiz_100M, and set properties
  set rst_clk_wiz_100M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_clk_wiz_100M ]

  # Create instance: system_ila_0, and set properties
  set system_ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_ila:1.1 system_ila_0 ]
  set_property -dict [list \
    CONFIG.C_DATA_DEPTH {32768} \
    CONFIG.C_EN_STRG_QUAL {1} \
    CONFIG.C_NUM_MONITOR_SLOTS {2} \
    CONFIG.C_SLOT {1} \
    CONFIG.C_SLOT_0_INTF_TYPE {xilinx.com:interface:spi_rtl:1.0} \
  ] $system_ila_0


  # Create instance: mdm_0, and set properties
  set mdm_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mdm:3.2 mdm_0 ]
  set_property -dict [list \
    CONFIG.C_ADDR_SIZE {32} \
    CONFIG.C_DBG_MEM_ACCESS {1} \
    CONFIG.C_DBG_REG_ACCESS {0} \
    CONFIG.C_M_AXI_ADDR_WIDTH {32} \
    CONFIG.C_TRACE_OUTPUT {0} \
    CONFIG.C_USE_CROSS_TRIGGER {0} \
    CONFIG.C_USE_UART {1} \
  ] $mdm_0


  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0 ]
  set_property CONFIG.C_ALL_OUTPUTS {1} $axi_gpio_0


  # Create interface connections
  connect_bd_intf_net -intf_net axi_gpio_0_GPIO [get_bd_intf_ports gpio_rtl_0] [get_bd_intf_pins axi_gpio_0/GPIO]
  connect_bd_intf_net -intf_net axi_quad_spi_0_SPI_0 [get_bd_intf_ports SPI_0] [get_bd_intf_pins axi_quad_spi_0/SPI_0]
connect_bd_intf_net -intf_net [get_bd_intf_nets axi_quad_spi_0_SPI_0] [get_bd_intf_ports SPI_0] [get_bd_intf_pins system_ila_0/SLOT_0_SPI]
  connect_bd_intf_net -intf_net mdm_0_LMB_0 [get_bd_intf_pins mdm_0/LMB_0] [get_bd_intf_pins local_mem/DLMB_Dbg]
  connect_bd_intf_net -intf_net mdm_0_MBDEBUG_0 [get_bd_intf_pins mdm_0/MBDEBUG_0] [get_bd_intf_pins microblaze_0/DEBUG]
  connect_bd_intf_net -intf_net mdm_0_M_AXI [get_bd_intf_pins mdm_0/M_AXI] [get_bd_intf_pins microblaze_0_axi_periph/S01_AXI]
  connect_bd_intf_net -intf_net microblaze_0_DLMB [get_bd_intf_pins microblaze_0/DLMB] [get_bd_intf_pins local_mem/DLMB]
  connect_bd_intf_net -intf_net microblaze_0_ILMB [get_bd_intf_pins microblaze_0/ILMB] [get_bd_intf_pins local_mem/ILMB]
  connect_bd_intf_net -intf_net microblaze_0_M_AXI_DP [get_bd_intf_pins microblaze_0/M_AXI_DP] [get_bd_intf_pins microblaze_0_axi_periph/S00_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M00_AXI [get_bd_intf_pins microblaze_0_axi_periph/M00_AXI] [get_bd_intf_pins axi_quad_spi_0/AXI_LITE]
connect_bd_intf_net -intf_net [get_bd_intf_nets microblaze_0_axi_periph_M00_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M00_AXI] [get_bd_intf_pins system_ila_0/SLOT_1_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M01_AXI [get_bd_intf_pins microblaze_0_axi_periph/M01_AXI] [get_bd_intf_pins mdm_0/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M02_AXI [get_bd_intf_pins microblaze_0_axi_periph/M02_AXI] [get_bd_intf_pins axi_gpio_0/S_AXI]

  # Create port connections
  connect_bd_net -net Net [get_bd_ports bd_clk] [get_bd_pins microblaze_0/Clk] [get_bd_pins local_mem/LMB_Clk] [get_bd_pins microblaze_0_axi_periph/S00_ACLK] [get_bd_pins rst_clk_wiz_100M/slowest_sync_clk] [get_bd_pins axi_quad_spi_0/s_axi_aclk] [get_bd_pins microblaze_0_axi_periph/M00_ACLK] [get_bd_pins microblaze_0_axi_periph/ACLK] [get_bd_pins axi_quad_spi_0/ext_spi_clk] [get_bd_pins system_ila_0/clk] [get_bd_pins mdm_0/M_AXI_ACLK] [get_bd_pins microblaze_0_axi_periph/S01_ACLK] [get_bd_pins mdm_0/S_AXI_ACLK] [get_bd_pins microblaze_0_axi_periph/M01_ACLK] [get_bd_pins microblaze_0_axi_periph/M02_ACLK] [get_bd_pins axi_gpio_0/s_axi_aclk]
  connect_bd_net -net bd_reset_1 [get_bd_ports bd_reset] [get_bd_pins rst_clk_wiz_100M/ext_reset_in]
  connect_bd_net -net mdm_0_Debug_SYS_Rst [get_bd_pins mdm_0/Debug_SYS_Rst] [get_bd_pins rst_clk_wiz_100M/mb_debug_sys_rst]
  connect_bd_net -net rst_clk_wiz_100M_mb_reset [get_bd_pins rst_clk_wiz_100M/mb_reset] [get_bd_pins microblaze_0/Reset] [get_bd_pins local_mem/LMB_Rst]
  connect_bd_net -net rst_clk_wiz_100M_peripheral_aresetn [get_bd_pins rst_clk_wiz_100M/peripheral_aresetn] [get_bd_pins microblaze_0_axi_periph/S00_ARESETN] [get_bd_pins axi_quad_spi_0/s_axi_aresetn] [get_bd_pins microblaze_0_axi_periph/M00_ARESETN] [get_bd_pins microblaze_0_axi_periph/ARESETN] [get_bd_pins mdm_0/M_AXI_ARESETN] [get_bd_pins microblaze_0_axi_periph/S01_ARESETN] [get_bd_pins mdm_0/S_AXI_ARESETN] [get_bd_pins microblaze_0_axi_periph/M01_ARESETN] [get_bd_pins microblaze_0_axi_periph/M02_ARESETN] [get_bd_pins axi_gpio_0/s_axi_aresetn]

  # Create address segments
  assign_bd_address -offset 0x40000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_gpio_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x44A00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_quad_spi_0/AXI_LITE/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs local_mem/lmb_bram_if_cntlr_1/SLMB/Mem] -force
  assign_bd_address -offset 0x41400000 -range 0x00001000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs mdm_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Instruction] [get_bd_addr_segs local_mem/lmb_bram_if_cntlr_0/SLMB/Mem] -force
  assign_bd_address -offset 0x40000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs axi_gpio_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x44A00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs axi_quad_spi_0/AXI_LITE/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs local_mem/lmb_bram_if_cntlr_0/SLMB1/Mem] -force
  assign_bd_address -offset 0x41400000 -range 0x00001000 -target_address_space [get_bd_addr_spaces mdm_0/Data] [get_bd_addr_segs mdm_0/S_AXI/Reg] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.426586",
   "Default View_TopLeft":"-113,-687",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.7.1 2023-07-26 3bc4126617 VDI=43 GEI=38 GUI=JA:21.0 TLS
#  -string -flagsOSRD
preplace port SPI_0 -pg 1 -lvl 7 -x 2070 -y 390 -defaultsOSRD
preplace port gpio_rtl_0 -pg 1 -lvl 7 -x 2070 -y 230 -defaultsOSRD
preplace port port-id_bd_clk -pg 1 -lvl 0 -x -10 -y 310 -defaultsOSRD
preplace port port-id_bd_reset -pg 1 -lvl 0 -x -10 -y 390 -defaultsOSRD
preplace inst axi_quad_spi_0 -pg 1 -lvl 5 -x 1710 -y 400 -defaultsOSRD
preplace inst microblaze_0 -pg 1 -lvl 3 -x 980 -y 560 -defaultsOSRD
preplace inst local_mem -pg 1 -lvl 4 -x 1400 -y 580 -defaultsOSRD
preplace inst microblaze_0_axi_periph -pg 1 -lvl 4 -x 1400 -y 190 -defaultsOSRD
preplace inst rst_clk_wiz_100M -pg 1 -lvl 1 -x 200 -y 410 -defaultsOSRD
preplace inst system_ila_0 -pg 1 -lvl 6 -x 1950 -y 480 -defaultsOSRD
preplace inst mdm_0 -pg 1 -lvl 2 -x 550 -y 490 -defaultsOSRD
preplace inst axi_gpio_0 -pg 1 -lvl 5 -x 1710 -y 230 -defaultsOSRD
preplace netloc Net 1 0 6 10 510 390 390 740 390 1240 400 1580 500 1850J
preplace netloc bd_reset_1 1 0 1 NJ 390
preplace netloc mdm_0_Debug_SYS_Rst 1 0 3 20 590 NJ 590 700
preplace netloc rst_clk_wiz_100M_mb_reset 1 1 3 NJ 370 710 650 1250J
preplace netloc rst_clk_wiz_100M_peripheral_aresetn 1 1 4 380 360 720J 370 1250 390 1560
preplace netloc axi_gpio_0_GPIO 1 5 2 NJ 230 NJ
preplace netloc axi_quad_spi_0_SPI_0 1 5 2 1840 390 NJ
preplace netloc mdm_0_LMB_0 1 2 2 N 470 1230J
preplace netloc mdm_0_MBDEBUG_0 1 2 1 720 490n
preplace netloc mdm_0_M_AXI 1 2 2 730J 360 1230
preplace netloc microblaze_0_DLMB 1 3 1 N 540
preplace netloc microblaze_0_ILMB 1 3 1 N 560
preplace netloc microblaze_0_M_AXI_DP 1 3 1 1220 60n
preplace netloc microblaze_0_axi_periph_M00_AXI 1 4 2 1570 490 1840
preplace netloc microblaze_0_axi_periph_M01_AXI 1 1 4 400 380 NJ 380 NJ 380 1550
preplace netloc microblaze_0_axi_periph_M02_AXI 1 4 1 N 210
levelinfo -pg 1 -10 200 550 980 1400 1710 1950 2070
pagesize -pg 1 -db -bbox -sgen -130 0 2190 690
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()

cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse [list design_1.bd]] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../qps-proto-captan-git/qps-proto-captan-git.gen/sources_1/bd/design_1/hdl/design_1_wrapper.vhd" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse [list design_1.bd]] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a200tffg1156-2 -flow {Vivado Synthesis 2024} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2024" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xc7a200tffg1156-2" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a200tffg1156-2 -flow {Vivado Implementation 2024} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2024" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xc7a200tffg1156-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
